<Application x:Class="WoT.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WoT"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!-- Application全体で有効な設定、Styleは基本的にここで定義するとよい -->
        
        <!-- fontColor 1.個々のStyleを定義する方法 -->
        <SolidColorBrush x:Key="customFontColorWhite" Color="AntiqueWhite"/>
        <SolidColorBrush x:Key="CustomBackgourndGray" Color="DarkSlateGray"/>
        <SolidColorBrush x:Key="CustomFontColorBrown" Color="#8B4513"/>



        <Style TargetType="Window" x:Key="CustomWindowStyle">
            <Setter Property="Foreground" Value="{StaticResource customFontColorWhite}"/>
            <Setter Property="Background" Value="{StaticResource CustomBackgourndGray}"/>
        </Style>

        <!-- 2.Button Application内の全ての指定したコントロールのStyleをまとめて変更する方法-->
        <!-- x:key指定しないと、暗黙的に適用されるデフォルトスタイルになる -->
        <!-- 全てのコントロールに適用することはできないが、色は定義してコントロールごとのStyleはハードコーディングせずに、参照しておくと楽 -->
        <Style TargetType="Button">
            <Setter Property="Foreground" Value="{StaticResource customFontColorWhite}"/>
            <Setter Property="Background" Value="{StaticResource CustomBackgourndGray}"/>
            <Setter Property="BorderBrush" Value="{StaticResource customFontColorWhite}"/>
            <Setter Property="Width" Value="60"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TranslateTransform X="0" Y="0" />
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderBrush="{StaticResource customFontColorWhite}"
                                Background="{StaticResource CustomBackgourndGray}"
                                BorderThickness="1">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <TranslateTransform X="1" Y="1" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <TranslateTransform X="0" Y="0" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- TabItemもTextBlockをベースにしており、TextBlockだけでなく様々なコントロールに影響する -->
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource customFontColorWhite}"/>
            <Setter Property="Background" Value="{StaticResource CustomBackgourndGray}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="TextBlock" x:Key="FilterTextBlockStyle">
            <Setter Property="Foreground" Value="{StaticResource customFontColorWhite}"/>
            <Setter Property="Background" Value="{StaticResource CustomBackgourndGray}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="20, 0, 0, 0"/>
        </Style>

        <Style TargetType="TextBox" x:Key="FilterTextBoxStyle">
            <Setter Property="Foreground" Value="{StaticResource customFontColorWhite}"/>
            <Setter Property="Background" Value="{StaticResource CustomBackgourndGray}"/>
            <Setter Property="BorderBrush" Value="{StaticResource customFontColorWhite}"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="18"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="CaretBrush" Value="{Binding Foreground, RelativeSource={RelativeSource Self}}"/> <!-- カーソルの色 -->

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1">
                                <ScrollViewer x:Name="PART_ContentHost" Margin="0" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBlock" x:Key="CardTextBoxStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource CustomFontColorBrown}"/>
        </Style>
        
        <Style TargetType="TextBox" x:Key="StackPanelTextBoxStyle" BasedOn="{StaticResource FilterTextBoxStyle}">
            <Setter Property="Foreground" Value="{StaticResource CustomFontColorBrown}"/>
            <Setter Property="Background" Value="{StaticResource customFontColorWhite}"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="Height" Value="34"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="StackPanel">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Orientation" Value="Horizontal"/>
        </Style>

        <!-- カードのスタイル -->
        <Style x:Key="CardStyle" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource customFontColorWhite}"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Margin" Value="10"/>

            <!-- ホバー時に影を表示するためのトリガー -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="DimGray" Direction="260" BlurRadius="3" ShadowDepth="1"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style TargetType="Table">
            <Setter Property="Background" Value="{StaticResource CustomBackgourndGray}"/>
        </Style>

        <Style TargetType="TabItem">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Padding" Value="6"/>
            <Setter Property="Margin" Value="0"/>
            <!-- Paddingの背景色はBorderで設定 -->
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                            <!-- ヘッダー部分のコンテンツを表示 -->
                            <ContentPresenter ContentSource="Header"
                                      Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- TabItemが選択されている場合 -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource CustomBackgourndGray}" />
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource customFontColorWhite}" />
                                <Setter Property="Foreground" Value="{StaticResource customFontColorWhite}" />
                            </Trigger>
                            <!-- TabItemが選択されていない場合 -->
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource CustomBackgourndGray}" />
                                <Setter TargetName="Bd" Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Foreground" Value="{StaticResource customFontColorWhite}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="ComboBox">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>





















        <!-- x:Keyで名前を設定した場合は、明示的に適用する必要がある -->
        <Style TargetType="Button" x:Key="CustomButtonColor">
            <Setter Property="Foreground" Value="{StaticResource customFontColorWhite}"/>
        </Style>

        <!-- BasedOn でStyleを継承して設定 -->
        <Style TargetType="Button" x:Key="OverrideCustomButton" BasedOn="{StaticResource CustomButtonColor}">
            <Setter Property="Background" Value="DimGray"/>
        </Style>
        



        <!-- Styleを参照する際は、{StaticResource xxxx} で参照する-->
    </Application.Resources>
</Application>
